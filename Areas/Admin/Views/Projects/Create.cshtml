@model GoatSilencerArchitecture.Models.Project

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>
<h4>Project</h4>
<hr />

<div class="row">
    <div class="col-md-8">
        <form asp-action="Create" enctype="multipart/form-data" id="create-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublished" /> @Html.DisplayNameFor(m => m.IsPublished)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RichTextContent" class="control-label"></label>
                <textarea asp-for="RichTextContent" class="form-control rich-text-editor"></textarea>
                <span asp-validation-for="RichTextContent" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="SortOrder" class="control-label"></label>
                <input asp-for="SortOrder" class="form-control" />
                <span asp-validation-for="SortOrder" class="text-danger"></span>
            </div>

            <input type="hidden" id="BlogsIdList" name="BlogsIdList" value="@Model.BlogsIdList" />

            <div class="form-group">
                <button type="button" class="btn btn-secondary" id="openBlogPopup">Add Blogs</button>
            </div>

            <div id="selectedBlogsContainer" class="mt-3">
                <h5>Selected Blogs</h5>
                <ul id="selectedBlogsList" class="list-group"></ul>
            </div>

            <!-- Main images (unchanged) -->
            <div class="form-group d-flex flex-wrap">
                <div class="col-md-6">
                    <label asp-for="MainImageLeft" class="control-label"></label>
                    <input type="file" name="mainImageLeftFile" class="form-control" />
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label asp-for="ImageLeftHeading" class="control-label"></label>
                        <input asp-for="ImageLeftHeading" class="form-control" />
                        <span asp-validation-for="ImageLeftHeading" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ImageLeftParagraph" class="control-label"></label>
                        <textarea asp-for="ImageLeftParagraph" class="form-control"></textarea>
                        <span asp-validation-for="ImageLeftParagraph" class="text-danger"></span>
                    </div>
                </div>
            </div>
            <!-- TopRight & BottomRight groups remain same -->

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<div class="modal fade" id="blogPopup" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Blogs</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <table class="table table-sm table-striped" id="blogsTable">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Id</th>
                            <th>Title</th>
                            <th>LayoutType</th>
                            <th>CreatedUtc</th>
                            <th>UpdatedUtc</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="addBlogsBtn">Add</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/Admin/Projects/Shared.css" asp-append-version="true" />
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://cdn.tiny.cloud/1/xxxx/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Sortable/1.15.0/Sortable.min.js"></script>
    <script>
        tinymce.init({
            selector: 'textarea.rich-text-editor',
            height: 300,
            menubar: false,
            plugins: 'link image lists code table',
            toolbar: 'undo redo | blocks | bold italic underline | alignleft aligncenter alignright | bullist numlist | link image | code',
            block_formats: 'Paragraph=p; Heading 1=h1; Heading 2=h2; Heading 3=h3; Heading 4=h4',
            content_style: 'body { font-family: Arial, sans-serif; line-height: 1.6; font-size: 16px; }'
        });

        let blogs = [];
        let selectedBlogIds = JSON.parse(document.getElementById("BlogsIdList").value || "[]");

        // Render existing blogs on load
        if (selectedBlogIds.length > 0) renderSelectedBlogs();

        document.getElementById("openBlogPopup").addEventListener("click", function () {
            fetch('/Admin/Projects/GetAllBlogs')
                .then(res => res.json())
                .then(data => {
                    blogs = data;
                    let tbody = document.querySelector("#blogsTable tbody");
                    tbody.innerHTML = "";
                    blogs.forEach(blog => {
                        let checked = selectedBlogIds.includes(blog.id) ? "checked" : "";
                        tbody.innerHTML += `
                            <tr>
                                <td><input type="checkbox" value="${blog.id}" ${checked}></td>
                                <td>${blog.id}</td>
                                <td>${blog.title}</td>
                                <td>${blog.layoutType}</td>
                                <td>${blog.createdUtc}</td>
                                <td>${blog.updatedUtc}</td>
                            </tr>`;
                    });
                    new bootstrap.Modal(document.getElementById("blogPopup")).show();
                });
        });

        document.getElementById("addBlogsBtn").addEventListener("click", function () {
            selectedBlogIds = Array.from(document.querySelectorAll("#blogsTable tbody input:checked"))
                .map(cb => parseInt(cb.value));

            renderSelectedBlogs();
            bootstrap.Modal.getInstance(document.getElementById("blogPopup")).hide();
        });

        function renderSelectedBlogs() {
            let list = document.getElementById("selectedBlogsList");
            list.innerHTML = "";
            selectedBlogIds.forEach(id => {
                let blog = blogs.find(b => b.id === id) || { title: "Blog #" + id };
                list.innerHTML += `<li class="list-group-item" data-id="${id}">${blog.title} (ID: ${id})</li>`;
            });

            new Sortable(list, {
                animation: 150,
                onEnd: function () {
                    selectedBlogIds = Array.from(list.children).map(li => parseInt(li.dataset.id));
                    updateHiddenField();
                }
            });

            updateHiddenField();
        }

        function updateHiddenField() {
            document.getElementById("BlogsIdList").value = JSON.stringify(selectedBlogIds);
        }
    </script>
}
