@model GoatSilencerArchitecture.Utilities.PaginatedList<GoatSilencerArchitecture.Models.Project>

@{
    ViewData["Title"] = "Projects";
    var currentSort = ViewData["CurrentSort"] as string;

    string GetSortIndicator(string sortParam)
    {
        // Default sort = UpdatedUtc descending
        if (string.IsNullOrEmpty(currentSort) && sortParam == "UpdatedUtc")
            return " &#9660;"; 

        if (currentSort == sortParam)
            return " &#9650;"; 

        // Check the *_desc version
        var descParam = char.ToLower(sortParam[0]) + sortParam.Substring(1) + "_desc";
        if (currentSort == descParam)
            return " &#9660;"; 

        return "";
    }

    string GetSortClass(string sortParam)
    {
        if (string.IsNullOrEmpty(currentSort) && sortParam == "UpdatedUtc")
            return "sort-active";

        var descParam = char.ToLower(sortParam[0]) + sortParam.Substring(1) + "_desc";
        if (currentSort == sortParam || currentSort == descParam)
            return "sort-active";

        return "";
    }
}

<style>
    .sort-active {
        background-color: #f0f0f0;
        text-decoration: underline;
        font-weight: bold;
    }

    .sort-link {
        color: black;
        text-decoration: none;
        padding: 4px 6px;
        border-radius: 4px;
    }

        .sort-link:hover {
            background-color: #e0e0e0;
            text-decoration: underline;
        }
</style>

<h1>Projects</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th class="@GetSortClass("SortOrder")">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["SortOrderSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="sort-link">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().SortOrder)
                    @Html.Raw(GetSortIndicator("SortOrder"))
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().IsPublished)
            </th>
            <th class="@GetSortClass("CreatedUtc")">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["CreatedUtcSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="sort-link">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().CreatedUtc)
                    @Html.Raw(GetSortIndicator("CreatedUtc"))
                </a>
            </th>
            <th class="@GetSortClass("UpdatedUtc")">
                <a asp-action="Index"
                   asp-route-sortOrder="@ViewData["UpdatedUtcSortParm"]"
                   asp-route-currentFilter="@ViewData["CurrentFilter"]"
                   class="sort-link">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().UpdatedUtc)
                    @Html.Raw(GetSortIndicator("UpdatedUtc"))
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.SortOrder)</td>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.IsPublished)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedUtc)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedUtc)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
