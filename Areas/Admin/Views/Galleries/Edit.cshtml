@model GoatSilencerArchitecture.Models.Gallery

@{
    ViewData["Title"] = "Edit Gallery";
}

<h1>Edit Gallery</h1>

<hr />
<form asp-action="Edit" method="post" enctype="multipart/form-data">
    <div class="row">
        <div class="col-md-6">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <div class="form-group">
                <label>Type</label>
                <select asp-for="Type" class="form-control">
                    <option value="Project">Project</option>
                    <option value="Service">Service</option>
                </select>
            </div>

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label>Project Content</label>
                <textarea asp-for="RichTextContent" class="form-control" rows="8"></textarea>
                <span asp-validation-for="RichTextContent" class="text-danger"></span>
            </div>

            <div class="form-group form-check">
                <input class="form-check-input" asp-for="IsPublished" />
                <label class="form-check-label" asp-for="IsPublished"></label>
            </div>

            <div class="form-group">
                <label asp-for="SortOrder" class="control-label"></label>
                <input asp-for="SortOrder" class="form-control" />
                <span asp-validation-for="SortOrder" class="text-danger"></span>
            </div>

            <!-- Main Image Left -->
            <div class="form-group">
                <label>Main Image Left</label><br />
                @if (!string.IsNullOrEmpty(Model.MainImageLeft))
                {
                    <img id="mainImageLeftExisting" src="@Model.MainImageLeft" class="img-thumbnail mb-2" style="max-height:150px;" />
                }
                <input type="file" name="MainImageLeftFile" class="form-control" id="mainImageLeftInput" />
                <img id="mainImageLeftPreview" src="#" alt="Image Preview" style="max-width: 150px; max-height: 150px; margin-top: 10px; display: none;" />
            </div>

            <!-- Main Image Top Right -->
            <div class="form-group">
                <label>Main Image Top Right</label><br />
                @if (!string.IsNullOrEmpty(Model.MainImageTopRight))
                {
                    <img id="mainImageTopRightExisting" src="@Model.MainImageTopRight" class="img-thumbnail mb-2" style="max-height:150px;" />
                }
                <input type="file" name="MainImageTopRightFile" class="form-control" id="mainImageTopRightInput" />
                <img id="mainImageTopRightPreview" src="#" alt="Image Preview" style="max-width: 150px; max-height: 150px; margin-top: 10px; display: none;" />
            </div>

            <!-- Main Image Bottom Right -->
            <div class="form-group">
                <label>Main Image Bottom Right</label><br />
                @if (!string.IsNullOrEmpty(Model.MainImageBottomRight))
                {
                    <img id="mainImageBottomRightExisting" src="@Model.MainImageBottomRight" class="img-thumbnail mb-2" style="max-height:150px;" />
                }
                <input type="file" name="MainImageBottomRightFile" class="form-control" id="mainImageBottomRightInput" />
                <img id="mainImageBottomRightPreview" src="#" alt="Image Preview" style="max-width: 150px; max-height: 150px; margin-top: 10px; display: none;" />
            </div>
        </div>
    </div>

    <hr />
    <h3>Gallery Images</h3>

    <!-- Existing images -->
    @if (Model.Images != null && Model.Images.Any())
    {
        <div class="row">
            @for (var i = 0; i < Model.Images.Count; i++)
            {
                <div class="col-md-3 text-center mb-3">
                    <img src="@Model.Images[i].FilePath" class="img-thumbnail mb-2" style="max-height:150px;" alt="@Model.Images[i].AltText" />
                    <input type="hidden" asp-for="Images[i].Id" />
                    <input type="hidden" asp-for="Images[i].FilePath" />
                    <div class="form-group mb-2">
                        <label asp-for="Images[i].Caption">Caption</label>
                        <input asp-for="Images[i].Caption" class="form-control form-control-sm" />
                    </div>
                    <div class="form-group mb-2">
                        <label asp-for="Images[i].AltText">Alt Text</label>
                        <input asp-for="Images[i].AltText" class="form-control form-control-sm" />
                    </div>
                    <a asp-action="DeleteImage" asp-route-id="@Model.Images[i].Id" asp-route-galleryId="@Model.Id" class="btn btn-danger btn-sm">Delete</a>
                </div>
            }
        </div>
    }
    else
    {
        <p>No images uploaded yet.</p>
    }

    <hr />
    <h3>Upload New Images</h3>
    <div class="form-group">
        <label>Image Files</label>
        <input type="file" name="files" class="form-control" multiple id="additionalImagesInput" />
        <small class="form-text text-muted">You can select multiple images.</small>
        <div id="additionalImagesPreview" class="d-flex flex-wrap mt-2"></div>
    </div>

    <div class="mt-3">
        <input type="submit" value="Save All Changes" class="btn btn-primary" />
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</form>

@section Scripts {
    <script src="https://cdn.tiny.cloud/1/5f03jnyxt3mkb0yuyavvuvvobp0a9y3zrrp1oqhu89aiwgmr/tinymce/6/tinymce.min.js" referrerpolicy="origin"></script>
    <script src="~/js/Admin/Galleries/Edit.js" asp-append-version="true"></script>
    <script>
        function setupImagePreview(inputId, previewId, existingImageId) {
            const input = document.getElementById(inputId);
            const preview = document.getElementById(previewId);
            const existingImage = document.getElementById(existingImageId);

            input.addEventListener('change', function() {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        preview.src = e.target.result;
                        preview.style.display = 'block';
                        if (existingImage) {
                            existingImage.style.display = 'none'; // Hide existing image if new one is selected
                        }
                    };
                    reader.readAsDataURL(this.files[0]);
                } else {
                    preview.src = '#';
                    preview.style.display = 'none';
                    if (existingImage) {
                        existingImage.style.display = 'block'; // Show existing image if no new one is selected
                    }
                }
            });
        }

        setupImagePreview('mainImageLeftInput', 'mainImageLeftPreview', 'mainImageLeftExisting');
        setupImagePreview('mainImageTopRightInput', 'mainImageTopRightPreview', 'mainImageTopRightExisting');
        setupImagePreview('mainImageBottomRightInput', 'mainImageBottomRightPreview', 'mainImageBottomRightExisting');

        // For additional images
        const additionalImagesInput = document.getElementById('additionalImagesInput');
        const additionalImagesPreview = document.getElementById('additionalImagesPreview');

        additionalImagesInput.addEventListener('change', function() {
            additionalImagesPreview.innerHTML = ''; // Clear previous previews
            if (this.files) {
                Array.from(this.files).forEach(file => {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        const imgContainer = document.createElement('div');
                        imgContainer.className = 'col-md-3 text-center mb-3'; // Use a similar layout to existing images

                        const img = document.createElement('img');
                        img.src = e.target.result;
                        img.style.maxWidth = '100px';
                        img.style.maxHeight = '100px';
                        img.style.margin = '5px';
                        img.alt = 'Image Preview';
                        img.className = 'img-thumbnail mb-2';

                        const captionGroup = document.createElement('div');
                        captionGroup.className = 'form-group mb-2';
                        const captionLabel = document.createElement('label');
                        captionLabel.textContent = 'Caption';
                        const captionInput = document.createElement('input');
                        captionInput.type = 'text';
                        captionInput.name = 'newImageCaptions'; // Important for model binding
                        captionInput.className = 'form-control form-control-sm';

                        captionGroup.appendChild(captionLabel);
                        captionGroup.appendChild(captionInput);

                        const altTextGroup = document.createElement('div');
                        altTextGroup.className = 'form-group mb-2';
                        const altTextLabel = document.createElement('label');
                        altTextLabel.textContent = 'Alt Text';
                        const altTextInput = document.createElement('input');
                        altTextInput.type = 'text';
                        altTextInput.name = 'newImageAltTexts'; // Important for model binding
                        altTextInput.className = 'form-control form-control-sm';

                        altTextGroup.appendChild(altTextLabel);
                        altTextGroup.appendChild(altTextInput);

                        imgContainer.appendChild(img);
                        imgContainer.appendChild(captionGroup);
                        imgContainer.appendChild(altTextGroup);
                        additionalImagesPreview.appendChild(imgContainer);
                    };
                    reader.readAsDataURL(file);
                });
            }
        });
    </script>
}

